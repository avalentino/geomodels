name: CI

on:
  push:
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

env:
  PACKAGE: geomodels

jobs:
  sdist:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build the package
        run: |
          python -m build --sdist
          python -m twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: |
            dist/*.tar.gz

  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} ${{ matrix.python-version }}
    needs: sdist
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Get source distribution
        uses: actions/download-artifact@v4.1.8
        with:
          name: sdist
          path: dist

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install twine

      - name: Build package
        shell: bash
        run: |
          python -m pip wheel --wheel-dir dist dist/${PACKAGE}*.tar.gz
          python -m twine check dist/*

      - name: Install
        shell: bash
        run: |
          python -m pip install dist/*.whl

      - name: Prepare the environment
        run: |
          geomodels-cli install-data -d data recommended

      - name: Install test dependencies
        shell: bash
        run: |
          python -m pip install pytest pytest-cov
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

      - name: Test CLI
        run: |
          geomodels-cli info

      - name: Test
        working-directory: dist
        shell: bash
        env:
          GEOGRAPHICLIB_DATA: "../data"
        run: |
          python -m pytest --cov=${PACKAGE} --cov-report=html --cov-report=term --pyargs ${PACKAGE}

  ubuntu:
    runs-on: ubuntu-24.04
    name: ubuntu-syslibs
    needs: sdist

    steps:
      - name: Get source distribution
        uses: actions/download-artifact@v4.1.8
        with:
          name: sdist
          path: dist

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            meson cmake libgeographiclib-dev geographiclib-tools \
            pip twine python3-numpy python3-pytest python3-tqdm

      - name: Build package
        env:
          GEOMODELS_IGNORE_BUNDLED_LIBS: "TRUE"
        run: |
          python -m pip wheel \
            --config-settings=setup-args="-Dgeographiclib=auto" \
            --wheel-dir dist dist/${PACKAGE}*.tar.gz
          python -m twine check dist/*

      - name: Install
        run: |
          python -m pip install dist/*.whl

      - name: Prepare the environment
        run: |
          sudo /usr/sbin/geographiclib-get-geoids egm96-5
          sudo /usr/sbin/geographiclib-get-gravity egm96
          sudo /usr/sbin/geographiclib-get-magnetic igrf12
          sudo /usr/sbin/geographiclib-get-magnetic wmm2015
          sudo /usr/sbin/geographiclib-get-magnetic wmm2020

      - name: Test CLI
        run: |
          geomodels-cli info

      - name: Test
        working-directory: dist
        shell: bash
        run: |
          python -m pytest --pyargs ${PACKAGE}
