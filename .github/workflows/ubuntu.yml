name: Ubuntu

on:
  push:
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.x"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install APT dependencies
        run: |
          sudo apt update
          sudo apt install libgeographic-dev

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install build
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Prepare the environment
        run: |
          make PYTHON=python data

      - name: Build package
        run: |
          python -m build
        env:
          GEOMODELS_IGNORE_BUNDLED_LIBS: TRUE
          GEOMODELS_GEOGRAPHICLIB_NAME: Geographic

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-no-embed-${{ matrix.python-version }}
          path: |
            dist/*.tar.gz
            dist/*.whl

      - name: Install
        run: |
          python -m pip install dist/*.whl

      - name: Install test dependencies
        run: |
          python -m pip install pytest pytest-cov
          if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

      - name: Test CLI
        run: |
          cd dist
          python -m geomodels info

      - name: Test
        run: |
          cd dist
          env GEOGRAPHICLIB_DATA=${PWD}/../data python -m pytest --pyargs geomodels
